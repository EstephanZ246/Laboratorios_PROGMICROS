

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 19 18:26:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	nvCOMMON
   214  0075                     __pnvCOMMON:
   215  0075                     _muxeo:
   216  0075                     	ds	1
   217  0076                     _Banderas:
   218  0076                     	ds	1
   219  0077                     _Decena:
   220  0077                     	ds	1
   221  0078                     _Centena:
   222  0078                     	ds	1
   223                           
   224                           	psect	nvBANK0
   225  0030                     __pnvBANK0:
   226  0030                     _Unidad:
   227  0030                     	ds	1
   228  000C                     _PIR1bits	set	12
   229  000B                     _INTCONbits	set	11
   230  0006                     _PORTB	set	6
   231  0009                     _PORTE	set	9
   232  0005                     _PORTA	set	5
   233  0007                     _PORTC	set	7
   234  001F                     _ADCON0bits	set	31
   235  0001                     _TMR0	set	1
   236  001E                     _ADRESH	set	30
   237  005A                     _T0IF	set	90
   238  0066                     _ADIF	set	102
   239  009F                     _ADCON1bits	set	159
   240  008C                     _PIE1bits	set	140
   241  0081                     _OPTION_REGbits	set	129
   242  0085                     _TRISA	set	133
   243  0089                     _TRISE	set	137
   244  0086                     _TRISB	set	134
   245  0087                     _TRISC	set	135
   246  008F                     _OSCCONbits	set	143
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249                           
   250                           	psect	cinit
   251  0011                     start_initialization:	
   252                           ; #config settings
   253                           
   254  0011                     __initialization:
   255                           
   256                           ; Clear objects allocated to COMMON
   257  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   258                           
   259                           ; Clear objects allocated to BANK0
   260  0012  1283               	bcf	3,5	;RP0=0, select bank0
   261  0013  1303               	bcf	3,6	;RP1=0, select bank0
   262  0014  01B1               	clrf	__pbssBANK0& (0+127)
   263  0015                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  0015                     __end_of__initialization:
   267  0015  0183               	clrf	3
   268  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMMON
   271  0079                     __pbssCOMMON:
   272  0079                     _ADRESH_TEMP1:
   273  0079                     	ds	1
   274                           
   275                           	psect	bssBANK0
   276  0031                     __pbssBANK0:
   277  0031                     _ADRESH_TEMP2:
   278  0031                     	ds	1
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:
   282  0070                     ?_setup:
   283  0070                     ?_Decimales:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_isr:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_main:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	5
   298                           
   299                           	psect	cstackBANK0
   300  0020                     __pcstackBANK0:
   301  0020                     ??_setup:
   302  0020                     ?_Display:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0020                     ?___awdiv:	
   306                           ; 2 bytes @ 0x0
   307                           
   308  0020                     ?___awmod:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0020                     Display@Numero:	
   312                           ; 2 bytes @ 0x0
   313                           
   314  0020                     ___awdiv@divisor:	
   315                           ; 2 bytes @ 0x0
   316                           
   317  0020                     ___awmod@divisor:	
   318                           ; 2 bytes @ 0x0
   319                           
   320                           
   321                           ; 2 bytes @ 0x0
   322  0020                     	ds	2
   323  0022                     ??_Display:
   324  0022                     ___awdiv@dividend:	
   325                           ; 1 bytes @ 0x2
   326                           
   327  0022                     ___awmod@dividend:	
   328                           ; 2 bytes @ 0x2
   329                           
   330                           
   331                           ; 2 bytes @ 0x2
   332  0022                     	ds	2
   333  0024                     ??___awdiv:
   334  0024                     ??___awmod:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 1 bytes @ 0x4
   339  0024                     	ds	1
   340  0025                     ___awdiv@counter:
   341  0025                     ___awmod@counter:	
   342                           ; 1 bytes @ 0x5
   343                           
   344                           
   345                           ; 1 bytes @ 0x5
   346  0025                     	ds	1
   347  0026                     ___awdiv@sign:
   348  0026                     ___awmod@sign:	
   349                           ; 1 bytes @ 0x6
   350                           
   351                           
   352                           ; 1 bytes @ 0x6
   353  0026                     	ds	1
   354  0027                     ___awdiv@quotient:
   355                           
   356                           ; 2 bytes @ 0x7
   357  0027                     	ds	2
   358  0029                     ??_Decimales:
   359                           
   360                           ; 1 bytes @ 0x9
   361  0029                     	ds	3
   362  002C                     Decimales@Temporal:
   363                           
   364                           ; 2 bytes @ 0xC
   365  002C                     	ds	2
   366  002E                     ??_main:
   367                           
   368                           ; 1 bytes @ 0xE
   369  002E                     	ds	2
   370                           
   371                           	psect	maintext
   372  0019                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 73 in file "Laboratorio8.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : B00/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          0       2       0       0       0
   395 ;;      Totals:         0       2       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels required when called:    3
   398 ;; This function calls:
   399 ;;		_Decimales
   400 ;;		_Display
   401 ;;		_setup
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _main
   409  0019                     _main:
   410  0019                     l1608:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;Laboratorio8.c: 75: setup();
   416  0019  120A  118A  2245  120A  118A  	fcall	_setup
   417  001E                     l1610:
   418                           
   419                           ;Laboratorio8.c: 77: Banderas = 1;
   420  001E  01F6               	clrf	_Banderas
   421  001F  0AF6               	incf	_Banderas,f
   422  0020                     l1612:
   423                           
   424                           ;Laboratorio8.c: 78: muxeo = 1;
   425  0020  01F5               	clrf	_muxeo
   426  0021  0AF5               	incf	_muxeo,f
   427  0022                     l83:	
   428                           ;Laboratorio8.c: 79: while(1)
   429                           
   430                           
   431                           ;Laboratorio8.c: 80: {;Laboratorio8.c: 81:     Decimales();
   432  0022  120A  118A  21AC  120A  118A  	fcall	_Decimales
   433                           
   434                           ;Laboratorio8.c: 82:     switch(Banderas){
   435  0027  2834               	goto	l1624
   436  0028                     l1614:
   437                           
   438                           ;Laboratorio8.c: 84:             ADCON0bits.CHS = 0x0C;
   439  0028  081F               	movf	31,w	;volatile
   440  0029  39C3               	andlw	-61
   441  002A  3830               	iorlw	48
   442  002B  009F               	movwf	31	;volatile
   443  002C                     l1616:
   444                           
   445                           ;Laboratorio8.c: 85:             ADCON0bits.GO_DONE = 1;
   446  002C  149F               	bsf	31,1	;volatile
   447                           
   448                           ;Laboratorio8.c: 86:             break;
   449  002D  2846               	goto	l1626
   450  002E                     l1618:
   451                           
   452                           ;Laboratorio8.c: 89:             ADCON0bits.CHS = 0x0A;
   453  002E  081F               	movf	31,w	;volatile
   454  002F  39C3               	andlw	-61
   455  0030  3828               	iorlw	40
   456  0031  009F               	movwf	31	;volatile
   457  0032                     l1620:
   458                           
   459                           ;Laboratorio8.c: 90:             ADCON0bits.GO_DONE = 1;
   460  0032  149F               	bsf	31,1	;volatile
   461                           
   462                           ;Laboratorio8.c: 91:             break;
   463  0033  2846               	goto	l1626
   464  0034                     l1624:
   465  0034  0876               	movf	_Banderas,w
   466  0035  1283               	bcf	3,5	;RP0=0, select bank0
   467  0036  1303               	bcf	3,6	;RP1=0, select bank0
   468  0037  00AE               	movwf	??_main
   469  0038  01AF               	clrf	??_main+1
   470                           
   471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   472                           ; Switch size 1, requested type "simple"
   473                           ; Number of cases is 1, Range of values is 0 to 0
   474                           ; switch strategies available:
   475                           ; Name         Instructions Cycles
   476                           ; simple_byte            4     3 (average)
   477                           ; direct_byte           11     8 (fixed)
   478                           ; jumptable            260     6 (fixed)
   479                           ;	Chosen strategy is simple_byte
   480  0039  082F               	movf	??_main+1,w
   481  003A  3A00               	xorlw	0	; case 0
   482  003B  1903               	skipnz
   483  003C  283E               	goto	l1778
   484  003D  2846               	goto	l1626
   485  003E                     l1778:
   486                           
   487                           ; Switch size 1, requested type "simple"
   488                           ; Number of cases is 2, Range of values is 1 to 2
   489                           ; switch strategies available:
   490                           ; Name         Instructions Cycles
   491                           ; simple_byte            7     4 (average)
   492                           ; direct_byte           17    11 (fixed)
   493                           ; jumptable            263     9 (fixed)
   494                           ;	Chosen strategy is simple_byte
   495  003E  082E               	movf	??_main,w
   496  003F  3A01               	xorlw	1	; case 1
   497  0040  1903               	skipnz
   498  0041  2828               	goto	l1614
   499  0042  3A03               	xorlw	3	; case 2
   500  0043  1903               	skipnz
   501  0044  282E               	goto	l1618
   502  0045  2846               	goto	l1626
   503  0046                     l1626:
   504                           
   505                           ;Laboratorio8.c: 93:     PORTC = ADRESH_TEMP1;
   506  0046  0879               	movf	_ADRESH_TEMP1,w
   507  0047  0087               	movwf	7	;volatile
   508                           
   509                           ;Laboratorio8.c: 94:     switch(muxeo){
   510  0048  2879               	goto	l1648
   511  0049                     l1628:
   512  0049  0185               	clrf	5	;volatile
   513  004A                     l1630:
   514  004A  3001               	movlw	1
   515  004B  0089               	movwf	9	;volatile
   516  004C                     l1632:
   517  004C  0878               	movf	_Centena,w
   518  004D  00AE               	movwf	??_main
   519  004E  01AF               	clrf	??_main+1
   520  004F  082E               	movf	??_main,w
   521  0050  00A0               	movwf	Display@Numero
   522  0051  082F               	movf	??_main+1,w
   523  0052  00A1               	movwf	Display@Numero+1
   524  0053  120A  118A  2201  120A  118A  	fcall	_Display
   525  0058  2822               	goto	l83
   526  0059                     l1634:
   527  0059  0185               	clrf	5	;volatile
   528  005A                     l1636:
   529  005A  3002               	movlw	2
   530  005B  0089               	movwf	9	;volatile
   531  005C                     l1638:
   532  005C  0877               	movf	_Decena,w
   533  005D  00AE               	movwf	??_main
   534  005E  01AF               	clrf	??_main+1
   535  005F  082E               	movf	??_main,w
   536  0060  00A0               	movwf	Display@Numero
   537  0061  082F               	movf	??_main+1,w
   538  0062  00A1               	movwf	Display@Numero+1
   539  0063  120A  118A  2201  120A  118A  	fcall	_Display
   540  0068  2822               	goto	l83
   541  0069                     l1640:
   542  0069  0185               	clrf	5	;volatile
   543  006A                     l1642:
   544  006A  3004               	movlw	4
   545  006B  0089               	movwf	9	;volatile
   546  006C                     l1644:
   547  006C  0830               	movf	_Unidad,w
   548  006D  00AE               	movwf	??_main
   549  006E  01AF               	clrf	??_main+1
   550  006F  082E               	movf	??_main,w
   551  0070  00A0               	movwf	Display@Numero
   552  0071  082F               	movf	??_main+1,w
   553  0072  00A1               	movwf	Display@Numero+1
   554  0073  120A  118A  2201  120A  118A  	fcall	_Display
   555  0078  2822               	goto	l83
   556  0079                     l1648:
   557  0079  0875               	movf	_muxeo,w
   558  007A  00AE               	movwf	??_main
   559  007B  01AF               	clrf	??_main+1
   560                           
   561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   562                           ; Switch size 1, requested type "simple"
   563                           ; Number of cases is 1, Range of values is 0 to 0
   564                           ; switch strategies available:
   565                           ; Name         Instructions Cycles
   566                           ; simple_byte            4     3 (average)
   567                           ; direct_byte           11     8 (fixed)
   568                           ; jumptable            260     6 (fixed)
   569                           ;	Chosen strategy is simple_byte
   570  007C  082F               	movf	??_main+1,w
   571  007D  3A00               	xorlw	0	; case 0
   572  007E  1903               	skipnz
   573  007F  2881               	goto	l1780
   574  0080  2822               	goto	l83
   575  0081                     l1780:
   576                           
   577                           ; Switch size 1, requested type "simple"
   578                           ; Number of cases is 3, Range of values is 1 to 4
   579                           ; switch strategies available:
   580                           ; Name         Instructions Cycles
   581                           ; simple_byte           10     6 (average)
   582                           ; direct_byte           23    11 (fixed)
   583                           ; jumptable            263     9 (fixed)
   584                           ;	Chosen strategy is simple_byte
   585  0081  082E               	movf	??_main,w
   586  0082  3A01               	xorlw	1	; case 1
   587  0083  1903               	skipnz
   588  0084  2849               	goto	l1628
   589  0085  3A03               	xorlw	3	; case 2
   590  0086  1903               	skipnz
   591  0087  2859               	goto	l1634
   592  0088  3A06               	xorlw	6	; case 4
   593  0089  1903               	skipnz
   594  008A  2869               	goto	l1640
   595  008B  2822               	goto	l83
   596  008C  120A  118A  280E   	ljmp	start
   597  008F                     __end_of_main:
   598                           
   599                           	psect	text1
   600  0245                     __ptext1:	
   601 ;; *************** function _setup *****************
   602 ;; Defined at:
   603 ;;		line 103 in file "Laboratorio8.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _setup
   633  0245                     _setup:
   634  0245                     l1530:	
   635                           ;incstack = 0
   636                           ; Regs used in _setup: [wreg+status,2+status,0]
   637                           
   638                           
   639                           ;Laboratorio8.c: 106:     OSCCONbits.SCS = 1;
   640  0245  1683               	bsf	3,5	;RP0=1, select bank1
   641  0246  1303               	bcf	3,6	;RP1=0, select bank1
   642  0247  140F               	bsf	15,0	;volatile
   643                           
   644                           ;Laboratorio8.c: 107:     OSCCONbits.IRCF2 = 0;
   645  0248  130F               	bcf	15,6	;volatile
   646                           
   647                           ;Laboratorio8.c: 108:     OSCCONbits.IRCF1 = 0;
   648  0249  128F               	bcf	15,5	;volatile
   649                           
   650                           ;Laboratorio8.c: 109:     OSCCONbits.IRCF0 = 1;
   651  024A  160F               	bsf	15,4	;volatile
   652  024B                     l1532:
   653                           
   654                           ;Laboratorio8.c: 114:     PORTB = 0X03;
   655  024B  3003               	movlw	3
   656  024C  1283               	bcf	3,5	;RP0=0, select bank0
   657  024D  1303               	bcf	3,6	;RP1=0, select bank0
   658  024E  0086               	movwf	6	;volatile
   659  024F                     l1534:
   660                           
   661                           ;Laboratorio8.c: 115:     PORTC = 0X00;
   662  024F  0187               	clrf	7	;volatile
   663  0250                     l1536:
   664                           
   665                           ;Laboratorio8.c: 116:     PORTE = 0X00;
   666  0250  0189               	clrf	9	;volatile
   667  0251                     l1538:
   668                           
   669                           ;Laboratorio8.c: 117:     PORTA = 0X00;
   670  0251  0185               	clrf	5	;volatile
   671  0252                     l1540:
   672                           
   673                           ;Laboratorio8.c: 119:     ANSEL = 0X00;
   674  0252  1683               	bsf	3,5	;RP0=1, select bank3
   675  0253  1703               	bsf	3,6	;RP1=1, select bank3
   676  0254  0188               	clrf	8	;volatile
   677                           
   678                           ;Laboratorio8.c: 120:     ANSELH = 0X14;
   679  0255  3014               	movlw	20
   680  0256  0089               	movwf	9	;volatile
   681  0257                     l1542:
   682                           
   683                           ;Laboratorio8.c: 121:     TRISC = 0X00;
   684  0257  1683               	bsf	3,5	;RP0=1, select bank1
   685  0258  1303               	bcf	3,6	;RP1=0, select bank1
   686  0259  0187               	clrf	7	;volatile
   687  025A                     l1544:
   688                           
   689                           ;Laboratorio8.c: 122:     TRISB = 0X03;
   690  025A  3003               	movlw	3
   691  025B  0086               	movwf	6	;volatile
   692                           
   693                           ;Laboratorio8.c: 123:     TRISE = 0X00;
   694  025C  0189               	clrf	9	;volatile
   695                           
   696                           ;Laboratorio8.c: 124:     TRISA = 0X00;
   697  025D  0185               	clrf	5	;volatile
   698  025E                     l1546:
   699                           
   700                           ;Laboratorio8.c: 135:     OPTION_REGbits.T0CS = 0;
   701  025E  1281               	bcf	1,5	;volatile
   702  025F                     l1548:
   703                           
   704                           ;Laboratorio8.c: 136:     OPTION_REGbits.PSA = 0;
   705  025F  1181               	bcf	1,3	;volatile
   706  0260                     l1550:
   707                           
   708                           ;Laboratorio8.c: 137:     OPTION_REGbits.PS2 = 0;
   709  0260  1101               	bcf	1,2	;volatile
   710  0261                     l1552:
   711                           
   712                           ;Laboratorio8.c: 138:     OPTION_REGbits.PS1 = 0;
   713  0261  1081               	bcf	1,1	;volatile
   714  0262                     l1554:
   715                           
   716                           ;Laboratorio8.c: 139:     OPTION_REGbits.PS0 = 0;
   717  0262  1001               	bcf	1,0	;volatile
   718  0263                     l1556:
   719                           
   720                           ;Laboratorio8.c: 140:     TMR0 = 177;
   721  0263  30B1               	movlw	177
   722  0264  1283               	bcf	3,5	;RP0=0, select bank0
   723  0265  1303               	bcf	3,6	;RP1=0, select bank0
   724  0266  0081               	movwf	1	;volatile
   725  0267                     l1558:
   726                           
   727                           ;Laboratorio8.c: 144:     INTCONbits.T0IF = 0;
   728  0267  110B               	bcf	11,2	;volatile
   729  0268                     l1560:
   730                           
   731                           ;Laboratorio8.c: 147:     INTCONbits.T0IE = 1;
   732  0268  168B               	bsf	11,5	;volatile
   733  0269                     l1562:
   734                           
   735                           ;Laboratorio8.c: 148:     INTCONbits.GIE = 1;
   736  0269  178B               	bsf	11,7	;volatile
   737  026A                     l1564:
   738                           
   739                           ;Laboratorio8.c: 149:     INTCONbits.PEIE= 1;
   740  026A  170B               	bsf	11,6	;volatile
   741  026B                     l1566:
   742                           
   743                           ;Laboratorio8.c: 152:     PIE1bits.ADIE = 1;
   744  026B  1683               	bsf	3,5	;RP0=1, select bank1
   745  026C  1303               	bcf	3,6	;RP1=0, select bank1
   746  026D  170C               	bsf	12,6	;volatile
   747  026E                     l1568:
   748                           
   749                           ;Laboratorio8.c: 155:     ADCON1bits.ADFM = 0;
   750  026E  139F               	bcf	31,7	;volatile
   751  026F                     l1570:
   752                           
   753                           ;Laboratorio8.c: 156:     ADCON0bits.ADCS = 0b00;
   754  026F  303F               	movlw	-193
   755  0270  1283               	bcf	3,5	;RP0=0, select bank0
   756  0271  1303               	bcf	3,6	;RP1=0, select bank0
   757  0272  059F               	andwf	31,f	;volatile
   758  0273                     l1572:
   759                           
   760                           ;Laboratorio8.c: 157:     PIR1bits.ADIF = 0;
   761  0273  130C               	bcf	12,6	;volatile
   762  0274                     l1574:
   763                           
   764                           ;Laboratorio8.c: 158:     ADCON0bits.ADON = 1;
   765  0274  141F               	bsf	31,0	;volatile
   766  0275                     l98:
   767  0275  0008               	return
   768  0276                     __end_of_setup:
   769                           
   770                           	psect	text2
   771  0201                     __ptext2:	
   772 ;; *************** function _Display *****************
   773 ;; Defined at:
   774 ;;		line 172 in file "Laboratorio8.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  Numero          2    0[BANK0 ] int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  2    0[BANK0 ] int 
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       2       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         0       2       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _Display
   804  0201                     _Display:
   805  0201                     l1578:	
   806                           ;incstack = 0
   807                           ; Regs used in _Display: [wreg-fsr0h+status,2+status,0]
   808                           
   809                           
   810                           ;Laboratorio8.c: 173:     switch (Numero){
   811  0201  2A1D               	goto	l1602
   812  0202                     l1580:
   813  0202  303F               	movlw	63
   814  0203  0085               	movwf	5	;volatile
   815                           
   816                           ;Laboratorio8.c: 175:         break;
   817  0204  2A44               	goto	l116
   818  0205                     l1582:
   819  0205  3006               	movlw	6
   820  0206  0085               	movwf	5	;volatile
   821                           
   822                           ;Laboratorio8.c: 177:         break;
   823  0207  2A44               	goto	l116
   824  0208                     l1584:
   825  0208  305B               	movlw	91
   826  0209  0085               	movwf	5	;volatile
   827                           
   828                           ;Laboratorio8.c: 179:         break;
   829  020A  2A44               	goto	l116
   830  020B                     l1586:
   831  020B  304F               	movlw	79
   832  020C  0085               	movwf	5	;volatile
   833                           
   834                           ;Laboratorio8.c: 181:         break;
   835  020D  2A44               	goto	l116
   836  020E                     l1588:
   837  020E  3066               	movlw	102
   838  020F  0085               	movwf	5	;volatile
   839                           
   840                           ;Laboratorio8.c: 183:         break;
   841  0210  2A44               	goto	l116
   842  0211                     l1590:
   843  0211  306D               	movlw	109
   844  0212  0085               	movwf	5	;volatile
   845                           
   846                           ;Laboratorio8.c: 185:         break;
   847  0213  2A44               	goto	l116
   848  0214                     l1592:
   849  0214  307D               	movlw	125
   850  0215  0085               	movwf	5	;volatile
   851                           
   852                           ;Laboratorio8.c: 187:         break;
   853  0216  2A44               	goto	l116
   854  0217                     l1594:
   855  0217  307F               	movlw	127
   856  0218  0085               	movwf	5	;volatile
   857                           
   858                           ;Laboratorio8.c: 189:         break;
   859  0219  2A44               	goto	l116
   860  021A                     l1598:
   861  021A  3067               	movlw	103
   862  021B  0085               	movwf	5	;volatile
   863                           
   864                           ;Laboratorio8.c: 193:         break;
   865  021C  2A44               	goto	l116
   866  021D                     l1602:
   867                           
   868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 1, Range of values is 0 to 0
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            4     3 (average)
   874                           ; direct_byte           11     8 (fixed)
   875                           ; jumptable            260     6 (fixed)
   876                           ;	Chosen strategy is simple_byte
   877  021D  1283               	bcf	3,5	;RP0=0, select bank0
   878  021E  1303               	bcf	3,6	;RP1=0, select bank0
   879  021F  0821               	movf	Display@Numero+1,w
   880  0220  3A00               	xorlw	0	; case 0
   881  0221  1903               	skipnz
   882  0222  2A24               	goto	l1782
   883  0223  2A44               	goto	l116
   884  0224                     l1782:
   885                           
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 10, Range of values is 0 to 9
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte           31    16 (average)
   891                           ; direct_byte           38     8 (fixed)
   892                           ; jumptable            260     6 (fixed)
   893                           ;	Chosen strategy is simple_byte
   894  0224  0820               	movf	Display@Numero,w
   895  0225  3A00               	xorlw	0	; case 0
   896  0226  1903               	skipnz
   897  0227  2A02               	goto	l1580
   898  0228  3A01               	xorlw	1	; case 1
   899  0229  1903               	skipnz
   900  022A  2A05               	goto	l1582
   901  022B  3A03               	xorlw	3	; case 2
   902  022C  1903               	skipnz
   903  022D  2A08               	goto	l1584
   904  022E  3A01               	xorlw	1	; case 3
   905  022F  1903               	skipnz
   906  0230  2A0B               	goto	l1586
   907  0231  3A07               	xorlw	7	; case 4
   908  0232  1903               	skipnz
   909  0233  2A0E               	goto	l1588
   910  0234  3A01               	xorlw	1	; case 5
   911  0235  1903               	skipnz
   912  0236  2A11               	goto	l1590
   913  0237  3A03               	xorlw	3	; case 6
   914  0238  1903               	skipnz
   915  0239  2A14               	goto	l1592
   916  023A  3A01               	xorlw	1	; case 7
   917  023B  1903               	skipnz
   918  023C  2A17               	goto	l1594
   919  023D  3A0F               	xorlw	15	; case 8
   920  023E  1903               	skipnz
   921  023F  2A17               	goto	l1594
   922  0240  3A01               	xorlw	1	; case 9
   923  0241  1903               	skipnz
   924  0242  2A1A               	goto	l1598
   925  0243  2A44               	goto	l116
   926  0244                     l116:
   927  0244  0008               	return
   928  0245                     __end_of_Display:
   929                           
   930                           	psect	text3
   931  01AC                     __ptext3:	
   932 ;; *************** function _Decimales *****************
   933 ;; Defined at:
   934 ;;		line 163 in file "Laboratorio8.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  Temporal        2   12[BANK0 ] int 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       2       0       0       0
   950 ;;      Temps:          0       3       0       0       0
   951 ;;      Totals:         0       5       0       0       0
   952 ;;Total ram usage:        5 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		___awdiv
   957 ;;		___awmod
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _Decimales
   965  01AC                     _Decimales:
   966  01AC                     l1576:	
   967                           ;incstack = 0
   968                           ; Regs used in _Decimales: [wreg+status,2+status,0+pclath+cstack]
   969                           
   970                           
   971                           ;Laboratorio8.c: 164:     int Temporal;;Laboratorio8.c: 165:     Centena = ADRESH_TEMP2 
      +                          /100;
   972  01AC  3064               	movlw	100
   973  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   974  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   975  01AF  00A0               	movwf	___awdiv@divisor
   976  01B0  3000               	movlw	0
   977  01B1  00A1               	movwf	___awdiv@divisor+1
   978  01B2  0831               	movf	_ADRESH_TEMP2,w
   979  01B3  00A9               	movwf	??_Decimales
   980  01B4  01AA               	clrf	??_Decimales+1
   981  01B5  0829               	movf	??_Decimales,w
   982  01B6  00A2               	movwf	___awdiv@dividend
   983  01B7  082A               	movf	??_Decimales+1,w
   984  01B8  00A3               	movwf	___awdiv@dividend+1
   985  01B9  120A  118A  208F  120A  118A  	fcall	___awdiv
   986  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   987  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   988  01C0  0820               	movf	?___awdiv,w
   989  01C1  00AB               	movwf	??_Decimales+2
   990  01C2  082B               	movf	??_Decimales+2,w
   991  01C3  00F8               	movwf	_Centena
   992                           
   993                           ;Laboratorio8.c: 166:     Temporal = ADRESH_TEMP2 % 100;
   994  01C4  3064               	movlw	100
   995  01C5  00A0               	movwf	___awmod@divisor
   996  01C6  3000               	movlw	0
   997  01C7  00A1               	movwf	___awmod@divisor+1
   998  01C8  0831               	movf	_ADRESH_TEMP2,w
   999  01C9  00A9               	movwf	??_Decimales
  1000  01CA  01AA               	clrf	??_Decimales+1
  1001  01CB  0829               	movf	??_Decimales,w
  1002  01CC  00A2               	movwf	___awmod@dividend
  1003  01CD  082A               	movf	??_Decimales+1,w
  1004  01CE  00A3               	movwf	___awmod@dividend+1
  1005  01CF  120A  118A  20F8  120A  118A  	fcall	___awmod
  1006  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1007  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1008  01D6  0821               	movf	?___awmod+1,w
  1009  01D7  00AD               	movwf	Decimales@Temporal+1
  1010  01D8  0820               	movf	?___awmod,w
  1011  01D9  00AC               	movwf	Decimales@Temporal
  1012                           
  1013                           ;Laboratorio8.c: 167:     Decena = Temporal /10;
  1014  01DA  300A               	movlw	10
  1015  01DB  00A0               	movwf	___awdiv@divisor
  1016  01DC  3000               	movlw	0
  1017  01DD  00A1               	movwf	___awdiv@divisor+1
  1018  01DE  082D               	movf	Decimales@Temporal+1,w
  1019  01DF  00A3               	movwf	___awdiv@dividend+1
  1020  01E0  082C               	movf	Decimales@Temporal,w
  1021  01E1  00A2               	movwf	___awdiv@dividend
  1022  01E2  120A  118A  208F  120A  118A  	fcall	___awdiv
  1023  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1024  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1025  01E9  0820               	movf	?___awdiv,w
  1026  01EA  00A9               	movwf	??_Decimales
  1027  01EB  0829               	movf	??_Decimales,w
  1028  01EC  00F7               	movwf	_Decena
  1029                           
  1030                           ;Laboratorio8.c: 168:     Unidad = Temporal % 10;
  1031  01ED  300A               	movlw	10
  1032  01EE  00A0               	movwf	___awmod@divisor
  1033  01EF  3000               	movlw	0
  1034  01F0  00A1               	movwf	___awmod@divisor+1
  1035  01F1  082D               	movf	Decimales@Temporal+1,w
  1036  01F2  00A3               	movwf	___awmod@dividend+1
  1037  01F3  082C               	movf	Decimales@Temporal,w
  1038  01F4  00A2               	movwf	___awmod@dividend
  1039  01F5  120A  118A  20F8  120A  118A  	fcall	___awmod
  1040  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1041  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1042  01FC  0820               	movf	?___awmod,w
  1043  01FD  00A9               	movwf	??_Decimales
  1044  01FE  0829               	movf	??_Decimales,w
  1045  01FF  00B0               	movwf	_Unidad
  1046  0200                     l101:
  1047  0200  0008               	return
  1048  0201                     __end_of_Decimales:
  1049                           
  1050                           	psect	text4
  1051  00F8                     __ptext4:	
  1052 ;; *************** function ___awmod *****************
  1053 ;; Defined at:
  1054 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  divisor         2    0[BANK0 ] int 
  1057 ;;  dividend        2    2[BANK0 ] int 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  sign            1    6[BANK0 ] unsigned char 
  1060 ;;  counter         1    5[BANK0 ] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2    0[BANK0 ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       4       0       0       0
  1071 ;;      Locals:         0       2       0       0       0
  1072 ;;      Temps:          0       1       0       0       0
  1073 ;;      Totals:         0       7       0       0       0
  1074 ;;Total ram usage:        7 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_Decimales
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function ___awmod
  1086  00F8                     ___awmod:
  1087  00F8                     l1492:	
  1088                           ;incstack = 0
  1089                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1090                           
  1091  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00FA  01A6               	clrf	___awmod@sign
  1094  00FB                     l1494:
  1095  00FB  1FA3               	btfss	___awmod@dividend+1,7
  1096  00FC  28FE               	goto	u531
  1097  00FD  28FF               	goto	u530
  1098  00FE                     u531:
  1099  00FE  2906               	goto	l1500
  1100  00FF                     u530:
  1101  00FF                     l1496:
  1102  00FF  09A2               	comf	___awmod@dividend,f
  1103  0100  09A3               	comf	___awmod@dividend+1,f
  1104  0101  0AA2               	incf	___awmod@dividend,f
  1105  0102  1903               	skipnz
  1106  0103  0AA3               	incf	___awmod@dividend+1,f
  1107  0104                     l1498:
  1108  0104  01A6               	clrf	___awmod@sign
  1109  0105  0AA6               	incf	___awmod@sign,f
  1110  0106                     l1500:
  1111  0106  1FA1               	btfss	___awmod@divisor+1,7
  1112  0107  2909               	goto	u541
  1113  0108  290A               	goto	u540
  1114  0109                     u541:
  1115  0109  290F               	goto	l1504
  1116  010A                     u540:
  1117  010A                     l1502:
  1118  010A  09A0               	comf	___awmod@divisor,f
  1119  010B  09A1               	comf	___awmod@divisor+1,f
  1120  010C  0AA0               	incf	___awmod@divisor,f
  1121  010D  1903               	skipnz
  1122  010E  0AA1               	incf	___awmod@divisor+1,f
  1123  010F                     l1504:
  1124  010F  0820               	movf	___awmod@divisor,w
  1125  0110  0421               	iorwf	___awmod@divisor+1,w
  1126  0111  1903               	btfsc	3,2
  1127  0112  2914               	goto	u551
  1128  0113  2915               	goto	u550
  1129  0114                     u551:
  1130  0114  2944               	goto	l1522
  1131  0115                     u550:
  1132  0115                     l1506:
  1133  0115  01A5               	clrf	___awmod@counter
  1134  0116  0AA5               	incf	___awmod@counter,f
  1135  0117  2923               	goto	l1512
  1136  0118                     l1508:
  1137  0118  3001               	movlw	1
  1138  0119                     u565:
  1139  0119  1003               	clrc
  1140  011A  0DA0               	rlf	___awmod@divisor,f
  1141  011B  0DA1               	rlf	___awmod@divisor+1,f
  1142  011C  3EFF               	addlw	-1
  1143  011D  1D03               	skipz
  1144  011E  2919               	goto	u565
  1145  011F                     l1510:
  1146  011F  3001               	movlw	1
  1147  0120  00A4               	movwf	??___awmod
  1148  0121  0824               	movf	??___awmod,w
  1149  0122  07A5               	addwf	___awmod@counter,f
  1150  0123                     l1512:
  1151  0123  1FA1               	btfss	___awmod@divisor+1,7
  1152  0124  2926               	goto	u571
  1153  0125  2927               	goto	u570
  1154  0126                     u571:
  1155  0126  2918               	goto	l1508
  1156  0127                     u570:
  1157  0127                     l1514:
  1158  0127  0821               	movf	___awmod@divisor+1,w
  1159  0128  0223               	subwf	___awmod@dividend+1,w
  1160  0129  1D03               	skipz
  1161  012A  292D               	goto	u585
  1162  012B  0820               	movf	___awmod@divisor,w
  1163  012C  0222               	subwf	___awmod@dividend,w
  1164  012D                     u585:
  1165  012D  1C03               	skipc
  1166  012E  2930               	goto	u581
  1167  012F  2931               	goto	u580
  1168  0130                     u581:
  1169  0130  2937               	goto	l1518
  1170  0131                     u580:
  1171  0131                     l1516:
  1172  0131  0820               	movf	___awmod@divisor,w
  1173  0132  02A2               	subwf	___awmod@dividend,f
  1174  0133  0821               	movf	___awmod@divisor+1,w
  1175  0134  1C03               	skipc
  1176  0135  03A3               	decf	___awmod@dividend+1,f
  1177  0136  02A3               	subwf	___awmod@dividend+1,f
  1178  0137                     l1518:
  1179  0137  3001               	movlw	1
  1180  0138                     u595:
  1181  0138  1003               	clrc
  1182  0139  0CA1               	rrf	___awmod@divisor+1,f
  1183  013A  0CA0               	rrf	___awmod@divisor,f
  1184  013B  3EFF               	addlw	-1
  1185  013C  1D03               	skipz
  1186  013D  2938               	goto	u595
  1187  013E                     l1520:
  1188  013E  3001               	movlw	1
  1189  013F  02A5               	subwf	___awmod@counter,f
  1190  0140  1D03               	btfss	3,2
  1191  0141  2943               	goto	u601
  1192  0142  2944               	goto	u600
  1193  0143                     u601:
  1194  0143  2927               	goto	l1514
  1195  0144                     u600:
  1196  0144                     l1522:
  1197  0144  0826               	movf	___awmod@sign,w
  1198  0145  1903               	btfsc	3,2
  1199  0146  2948               	goto	u611
  1200  0147  2949               	goto	u610
  1201  0148                     u611:
  1202  0148  294E               	goto	l1526
  1203  0149                     u610:
  1204  0149                     l1524:
  1205  0149  09A2               	comf	___awmod@dividend,f
  1206  014A  09A3               	comf	___awmod@dividend+1,f
  1207  014B  0AA2               	incf	___awmod@dividend,f
  1208  014C  1903               	skipnz
  1209  014D  0AA3               	incf	___awmod@dividend+1,f
  1210  014E                     l1526:
  1211  014E  0823               	movf	___awmod@dividend+1,w
  1212  014F  00A1               	movwf	?___awmod+1
  1213  0150  0822               	movf	___awmod@dividend,w
  1214  0151  00A0               	movwf	?___awmod
  1215  0152                     l368:
  1216  0152  0008               	return
  1217  0153                     __end_of___awmod:
  1218                           
  1219                           	psect	text5
  1220  008F                     __ptext5:	
  1221 ;; *************** function ___awdiv *****************
  1222 ;; Defined at:
  1223 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  divisor         2    0[BANK0 ] int 
  1226 ;;  dividend        2    2[BANK0 ] int 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  quotient        2    7[BANK0 ] int 
  1229 ;;  sign            1    6[BANK0 ] unsigned char 
  1230 ;;  counter         1    5[BANK0 ] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2    0[BANK0 ] int 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       4       0       0       0
  1241 ;;      Locals:         0       4       0       0       0
  1242 ;;      Temps:          0       1       0       0       0
  1243 ;;      Totals:         0       9       0       0       0
  1244 ;;Total ram usage:        9 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_Decimales
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function ___awdiv
  1256  008F                     ___awdiv:
  1257  008F                     l1448:	
  1258                           ;incstack = 0
  1259                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1260                           
  1261  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0091  01A6               	clrf	___awdiv@sign
  1264  0092                     l1450:
  1265  0092  1FA1               	btfss	___awdiv@divisor+1,7
  1266  0093  2895               	goto	u431
  1267  0094  2896               	goto	u430
  1268  0095                     u431:
  1269  0095  289D               	goto	l1456
  1270  0096                     u430:
  1271  0096                     l1452:
  1272  0096  09A0               	comf	___awdiv@divisor,f
  1273  0097  09A1               	comf	___awdiv@divisor+1,f
  1274  0098  0AA0               	incf	___awdiv@divisor,f
  1275  0099  1903               	skipnz
  1276  009A  0AA1               	incf	___awdiv@divisor+1,f
  1277  009B                     l1454:
  1278  009B  01A6               	clrf	___awdiv@sign
  1279  009C  0AA6               	incf	___awdiv@sign,f
  1280  009D                     l1456:
  1281  009D  1FA3               	btfss	___awdiv@dividend+1,7
  1282  009E  28A0               	goto	u441
  1283  009F  28A1               	goto	u440
  1284  00A0                     u441:
  1285  00A0  28AA               	goto	l1462
  1286  00A1                     u440:
  1287  00A1                     l1458:
  1288  00A1  09A2               	comf	___awdiv@dividend,f
  1289  00A2  09A3               	comf	___awdiv@dividend+1,f
  1290  00A3  0AA2               	incf	___awdiv@dividend,f
  1291  00A4  1903               	skipnz
  1292  00A5  0AA3               	incf	___awdiv@dividend+1,f
  1293  00A6                     l1460:
  1294  00A6  3001               	movlw	1
  1295  00A7  00A4               	movwf	??___awdiv
  1296  00A8  0824               	movf	??___awdiv,w
  1297  00A9  06A6               	xorwf	___awdiv@sign,f
  1298  00AA                     l1462:
  1299  00AA  01A7               	clrf	___awdiv@quotient
  1300  00AB  01A8               	clrf	___awdiv@quotient+1
  1301  00AC                     l1464:
  1302  00AC  0820               	movf	___awdiv@divisor,w
  1303  00AD  0421               	iorwf	___awdiv@divisor+1,w
  1304  00AE  1903               	btfsc	3,2
  1305  00AF  28B1               	goto	u451
  1306  00B0  28B2               	goto	u450
  1307  00B1                     u451:
  1308  00B1  28E9               	goto	l1484
  1309  00B2                     u450:
  1310  00B2                     l1466:
  1311  00B2  01A5               	clrf	___awdiv@counter
  1312  00B3  0AA5               	incf	___awdiv@counter,f
  1313  00B4  28C0               	goto	l1472
  1314  00B5                     l1468:
  1315  00B5  3001               	movlw	1
  1316  00B6                     u465:
  1317  00B6  1003               	clrc
  1318  00B7  0DA0               	rlf	___awdiv@divisor,f
  1319  00B8  0DA1               	rlf	___awdiv@divisor+1,f
  1320  00B9  3EFF               	addlw	-1
  1321  00BA  1D03               	skipz
  1322  00BB  28B6               	goto	u465
  1323  00BC                     l1470:
  1324  00BC  3001               	movlw	1
  1325  00BD  00A4               	movwf	??___awdiv
  1326  00BE  0824               	movf	??___awdiv,w
  1327  00BF  07A5               	addwf	___awdiv@counter,f
  1328  00C0                     l1472:
  1329  00C0  1FA1               	btfss	___awdiv@divisor+1,7
  1330  00C1  28C3               	goto	u471
  1331  00C2  28C4               	goto	u470
  1332  00C3                     u471:
  1333  00C3  28B5               	goto	l1468
  1334  00C4                     u470:
  1335  00C4                     l1474:
  1336  00C4  3001               	movlw	1
  1337  00C5                     u485:
  1338  00C5  1003               	clrc
  1339  00C6  0DA7               	rlf	___awdiv@quotient,f
  1340  00C7  0DA8               	rlf	___awdiv@quotient+1,f
  1341  00C8  3EFF               	addlw	-1
  1342  00C9  1D03               	skipz
  1343  00CA  28C5               	goto	u485
  1344  00CB  0821               	movf	___awdiv@divisor+1,w
  1345  00CC  0223               	subwf	___awdiv@dividend+1,w
  1346  00CD  1D03               	skipz
  1347  00CE  28D1               	goto	u495
  1348  00CF  0820               	movf	___awdiv@divisor,w
  1349  00D0  0222               	subwf	___awdiv@dividend,w
  1350  00D1                     u495:
  1351  00D1  1C03               	skipc
  1352  00D2  28D4               	goto	u491
  1353  00D3  28D5               	goto	u490
  1354  00D4                     u491:
  1355  00D4  28DC               	goto	l1480
  1356  00D5                     u490:
  1357  00D5                     l1476:
  1358  00D5  0820               	movf	___awdiv@divisor,w
  1359  00D6  02A2               	subwf	___awdiv@dividend,f
  1360  00D7  0821               	movf	___awdiv@divisor+1,w
  1361  00D8  1C03               	skipc
  1362  00D9  03A3               	decf	___awdiv@dividend+1,f
  1363  00DA  02A3               	subwf	___awdiv@dividend+1,f
  1364  00DB                     l1478:
  1365  00DB  1427               	bsf	___awdiv@quotient,0
  1366  00DC                     l1480:
  1367  00DC  3001               	movlw	1
  1368  00DD                     u505:
  1369  00DD  1003               	clrc
  1370  00DE  0CA1               	rrf	___awdiv@divisor+1,f
  1371  00DF  0CA0               	rrf	___awdiv@divisor,f
  1372  00E0  3EFF               	addlw	-1
  1373  00E1  1D03               	skipz
  1374  00E2  28DD               	goto	u505
  1375  00E3                     l1482:
  1376  00E3  3001               	movlw	1
  1377  00E4  02A5               	subwf	___awdiv@counter,f
  1378  00E5  1D03               	btfss	3,2
  1379  00E6  28E8               	goto	u511
  1380  00E7  28E9               	goto	u510
  1381  00E8                     u511:
  1382  00E8  28C4               	goto	l1474
  1383  00E9                     u510:
  1384  00E9                     l1484:
  1385  00E9  0826               	movf	___awdiv@sign,w
  1386  00EA  1903               	btfsc	3,2
  1387  00EB  28ED               	goto	u521
  1388  00EC  28EE               	goto	u520
  1389  00ED                     u521:
  1390  00ED  28F3               	goto	l1488
  1391  00EE                     u520:
  1392  00EE                     l1486:
  1393  00EE  09A7               	comf	___awdiv@quotient,f
  1394  00EF  09A8               	comf	___awdiv@quotient+1,f
  1395  00F0  0AA7               	incf	___awdiv@quotient,f
  1396  00F1  1903               	skipnz
  1397  00F2  0AA8               	incf	___awdiv@quotient+1,f
  1398  00F3                     l1488:
  1399  00F3  0828               	movf	___awdiv@quotient+1,w
  1400  00F4  00A1               	movwf	?___awdiv+1
  1401  00F5  0827               	movf	___awdiv@quotient,w
  1402  00F6  00A0               	movwf	?___awdiv
  1403  00F7                     l355:
  1404  00F7  0008               	return
  1405  00F8                     __end_of___awdiv:
  1406                           
  1407                           	psect	text6
  1408  0153                     __ptext6:	
  1409 ;; *************** function _isr *****************
  1410 ;; Defined at:
  1411 ;;		line 47 in file "Laboratorio8.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          5       0       0       0       0
  1428 ;;      Totals:         5       0       0       0       0
  1429 ;;Total ram usage:        5 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		Interrupt level 1
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _isr
  1440  0153                     _isr:
  1441  0153                     i1l1238:
  1442                           
  1443                           ;Laboratorio8.c: 50:     if (ADIF == 1){
  1444  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0155  1F0C               	btfss	12,6	;volatile
  1447  0156  2958               	goto	u41_21
  1448  0157  2959               	goto	u41_20
  1449  0158                     u41_21:
  1450  0158  297B               	goto	i1l67
  1451  0159                     u41_20:
  1452  0159  296A               	goto	i1l1250
  1453  015A                     i1l1242:
  1454                           
  1455                           ;Laboratorio8.c: 53:                 ADRESH_TEMP1 = ADRESH;
  1456  015A  081E               	movf	30,w	;volatile
  1457  015B  00F0               	movwf	??_isr
  1458  015C  0870               	movf	??_isr,w
  1459  015D  00F9               	movwf	_ADRESH_TEMP1
  1460                           
  1461                           ;Laboratorio8.c: 54:                 Banderas = 2;
  1462  015E  3002               	movlw	2
  1463  015F  00F0               	movwf	??_isr
  1464  0160  0870               	movf	??_isr,w
  1465  0161  00F6               	movwf	_Banderas
  1466                           
  1467                           ;Laboratorio8.c: 55:                 break;
  1468  0162  297A               	goto	i1l70
  1469  0163                     i1l1244:
  1470                           
  1471                           ;Laboratorio8.c: 57:                 ADRESH_TEMP2 = ADRESH;
  1472  0163  081E               	movf	30,w	;volatile
  1473  0164  00F0               	movwf	??_isr
  1474  0165  0870               	movf	??_isr,w
  1475  0166  00B1               	movwf	_ADRESH_TEMP2
  1476  0167                     i1l1246:
  1477                           
  1478                           ;Laboratorio8.c: 58:                 Banderas = 1;
  1479  0167  01F6               	clrf	_Banderas
  1480  0168  0AF6               	incf	_Banderas,f
  1481                           
  1482                           ;Laboratorio8.c: 59:                 break;
  1483  0169  297A               	goto	i1l70
  1484  016A                     i1l1250:
  1485  016A  0876               	movf	_Banderas,w
  1486  016B  00F0               	movwf	??_isr
  1487  016C  01F1               	clrf	??_isr+1
  1488                           
  1489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1490                           ; Switch size 1, requested type "simple"
  1491                           ; Number of cases is 1, Range of values is 0 to 0
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte            4     3 (average)
  1495                           ; direct_byte           11     8 (fixed)
  1496                           ; jumptable            260     6 (fixed)
  1497                           ;	Chosen strategy is simple_byte
  1498  016D  0871               	movf	??_isr+1,w
  1499  016E  3A00               	xorlw	0	; case 0
  1500  016F  1903               	skipnz
  1501  0170  2972               	goto	i1l1784
  1502  0171  297A               	goto	i1l70
  1503  0172                     i1l1784:
  1504                           
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 2, Range of values is 1 to 2
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte            7     4 (average)
  1510                           ; direct_byte           17    11 (fixed)
  1511                           ; jumptable            263     9 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513  0172  0870               	movf	??_isr,w
  1514  0173  3A01               	xorlw	1	; case 1
  1515  0174  1903               	skipnz
  1516  0175  295A               	goto	i1l1242
  1517  0176  3A03               	xorlw	3	; case 2
  1518  0177  1903               	skipnz
  1519  0178  2963               	goto	i1l1244
  1520  0179  297A               	goto	i1l70
  1521  017A                     i1l70:
  1522                           
  1523                           ;Laboratorio8.c: 61:         ADIF = 0;
  1524  017A  130C               	bcf	12,6	;volatile
  1525  017B                     i1l67:	
  1526                           ;Laboratorio8.c: 62:     }
  1527                           
  1528                           
  1529                           ;Laboratorio8.c: 63:     if (T0IF ==1){
  1530  017B  1D0B               	btfss	11,2	;volatile
  1531  017C  297E               	goto	u42_21
  1532  017D  297F               	goto	u42_20
  1533  017E                     u42_21:
  1534  017E  29A3               	goto	i1l78
  1535  017F                     u42_20:
  1536  017F  298D               	goto	i1l1260
  1537  0180                     i1l1254:
  1538  0180  3002               	movlw	2
  1539  0181  00F0               	movwf	??_isr
  1540  0182  0870               	movf	??_isr,w
  1541  0183  00F5               	movwf	_muxeo
  1542  0184  29A0               	goto	i1l1262
  1543  0185                     i1l1256:
  1544  0185  3004               	movlw	4
  1545  0186  00F0               	movwf	??_isr
  1546  0187  0870               	movf	??_isr,w
  1547  0188  00F5               	movwf	_muxeo
  1548  0189  29A0               	goto	i1l1262
  1549  018A                     i1l77:	
  1550                           ;Laboratorio8.c: 67:             case(4): muxeo = 1; break;
  1551                           
  1552  018A  01F5               	clrf	_muxeo
  1553  018B  0AF5               	incf	_muxeo,f
  1554  018C  29A0               	goto	i1l1262
  1555  018D                     i1l1260:
  1556  018D  0875               	movf	_muxeo,w
  1557  018E  00F0               	movwf	??_isr
  1558  018F  01F1               	clrf	??_isr+1
  1559                           
  1560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1561                           ; Switch size 1, requested type "simple"
  1562                           ; Number of cases is 1, Range of values is 0 to 0
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte            4     3 (average)
  1566                           ; direct_byte           11     8 (fixed)
  1567                           ; jumptable            260     6 (fixed)
  1568                           ;	Chosen strategy is simple_byte
  1569  0190  0871               	movf	??_isr+1,w
  1570  0191  3A00               	xorlw	0	; case 0
  1571  0192  1903               	skipnz
  1572  0193  2995               	goto	i1l1786
  1573  0194  29A0               	goto	i1l1262
  1574  0195                     i1l1786:
  1575                           
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 3, Range of values is 1 to 4
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte           10     6 (average)
  1581                           ; direct_byte           23    11 (fixed)
  1582                           ; jumptable            263     9 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  0195  0870               	movf	??_isr,w
  1585  0196  3A01               	xorlw	1	; case 1
  1586  0197  1903               	skipnz
  1587  0198  2980               	goto	i1l1254
  1588  0199  3A03               	xorlw	3	; case 2
  1589  019A  1903               	skipnz
  1590  019B  2985               	goto	i1l1256
  1591  019C  3A06               	xorlw	6	; case 4
  1592  019D  1903               	skipnz
  1593  019E  298A               	goto	i1l77
  1594  019F  29A0               	goto	i1l1262
  1595  01A0                     i1l1262:
  1596                           
  1597                           ;Laboratorio8.c: 69:         TMR0 = 177;
  1598  01A0  30B1               	movlw	177
  1599  01A1  0081               	movwf	1	;volatile
  1600  01A2                     i1l1264:
  1601                           
  1602                           ;Laboratorio8.c: 70:         T0IF = 0;
  1603  01A2  110B               	bcf	11,2	;volatile
  1604  01A3                     i1l78:
  1605  01A3  0874               	movf	??_isr+4,w
  1606  01A4  008A               	movwf	10
  1607  01A5  0873               	movf	??_isr+3,w
  1608  01A6  0084               	movwf	4
  1609  01A7  0E72               	swapf	??_isr+2,w
  1610  01A8  0083               	movwf	3
  1611  01A9  0EFE               	swapf	btemp,f
  1612  01AA  0E7E               	swapf	btemp,w
  1613  01AB  0009               	retfie
  1614  01AC                     __end_of_isr:
  1615  007E                     btemp	set	126	;btemp
  1616  007E                     wtemp0	set	126
  1617                           
  1618                           	psect	intentry
  1619  0004                     __pintentry:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1622                           
  1623  0004                     interrupt_function:
  1624  007E                     saved_w	set	btemp
  1625  0004  00FE               	movwf	btemp
  1626  0005  0E03               	swapf	3,w
  1627  0006  00F2               	movwf	??_isr+2
  1628  0007  0804               	movf	4,w
  1629  0008  00F3               	movwf	??_isr+3
  1630  0009  080A               	movf	10,w
  1631  000A  00F4               	movwf	??_isr+4
  1632  000B  120A  118A  2953   	ljmp	_isr
  1633                           
  1634                           	psect	config
  1635                           
  1636                           ;Config register CONFIG1 @ 0x2007
  1637                           ;	Oscillator Selection bits
  1638                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1639                           ;	Watchdog Timer Enable bit
  1640                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1641                           ;	Power-up Timer Enable bit
  1642                           ;	PWRTE = OFF, PWRT disabled
  1643                           ;	RE3/MCLR pin function select bit
  1644                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1645                           ;	Code Protection bit
  1646                           ;	CP = OFF, Program memory code protection is disabled
  1647                           ;	Data Code Protection bit
  1648                           ;	CPD = OFF, Data memory code protection is disabled
  1649                           ;	Brown Out Reset Selection bits
  1650                           ;	BOREN = OFF, BOR disabled
  1651                           ;	Internal External Switchover bit
  1652                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1653                           ;	Fail-Safe Clock Monitor Enabled bit
  1654                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1655                           ;	Low Voltage Programming Enable bit
  1656                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1657                           ;	In-Circuit Debugger Mode bit
  1658                           ;	DEBUG = 0x1, unprogrammed default
  1659  2007                     	org	8199
  1660  2007  30D4               	dw	12500
  1661                           
  1662                           ;Config register CONFIG2 @ 0x2008
  1663                           ;	Brown-out Reset Selection bit
  1664                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1665                           ;	Flash Program Memory Self Write Enable bits
  1666                           ;	WRT = OFF, Write protection off
  1667  2008                     	org	8200
  1668  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     16      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decimales
    _Decimales->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1964
                                             14 BANK0      2     2      0
                          _Decimales
                            _Display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                              2     0      2     301
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Decimales                                            5     5      0    1663
                                              9 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decimales
     ___awdiv
     ___awmod
   _Display
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 19 18:26:35 2021

                     l83 0022                       l98 0275             ___awdiv@sign 0026  
                    l101 0200                      l116 0244                      l355 00F7  
                    l368 0152                      u510 00E9                      u430 0096  
                    u511 00E8                      u431 0095                      u520 00EE  
                    u440 00A1                      u600 0144                      u521 00ED  
                    u505 00DD                      u441 00A0                      u601 0143  
                    u450 00B2                      u610 0149                      u530 00FF  
                    u451 00B1                      u611 0148                      u531 00FE  
                    u540 010A                      u541 0109                      u470 00C4  
                    u550 0115                      u471 00C3                      u551 0114  
                    u465 00B6                      u490 00D5                      u570 0127  
                    u491 00D4                      u571 0126                      u580 0131  
                    u485 00C5                      u581 0130                      u565 0119  
                    u495 00D1                      u585 012D                      u595 0138  
                    _isr 0153                      fsr0 0004             ___awmod@sign 0026  
                   l1500 0106                     l1510 011F                     l1502 010A  
                   l1520 013E                     l1512 0123                     l1504 010F  
                   l1450 0092                     l1514 0127                     l1506 0115  
                   l1522 0144                     l1602 021D                     l1530 0245  
                   l1610 001E                     l1460 00A6                     l1452 0096  
                   l1524 0149                     l1516 0131                     l1508 0118  
                   l1540 0252                     l1532 024B                     l1620 0032  
                   l1612 0020                     l1470 00BC                     l1462 00AA  
                   l1454 009B                     l1526 014E                     l1518 0137  
                   l1550 0260                     l1542 0257                     l1534 024F  
                   l1630 004A                     l1614 0028                     l1480 00DC  
                   l1472 00C0                     l1464 00AC                     l1456 009D  
                   l1448 008F                     l1560 0268                     l1552 0261  
                   l1544 025A                     l1536 0250                     l1640 0069  
                   l1632 004C                     l1616 002C                     l1624 0034  
                   l1608 0019                     l1482 00E3                     l1474 00C4  
                   l1466 00B2                     l1458 00A1                     l1570 026F  
                   l1562 0269                     l1554 0262                     l1546 025E  
                   l1538 0251                     l1642 006A                     l1634 0059  
                   l1618 002E                     l1626 0046                     l1476 00D5  
                   l1468 00B5                     l1484 00E9                     l1492 00F8  
                   l1580 0202                     l1572 0273                     l1564 026A  
                   l1556 0263                     l1548 025F                     l1644 006C  
                   l1636 005A                     l1628 0049                     l1486 00EE  
                   l1478 00DB                     l1494 00FB                     l1590 0211  
                   l1582 0205                     l1574 0274                     l1566 026B  
                   l1558 0267                     l1638 005C                     l1488 00F3  
                   l1496 00FF                     l1576 01AC                     l1592 0214  
                   l1584 0208                     l1568 026E                     l1648 0079  
                   l1498 0104                     l1594 0217                     l1586 020B  
                   l1578 0201                     l1588 020E                     l1780 0081  
                   l1782 0224                     l1598 021A                     l1778 003E  
                   _ADIF 0066                     ?_isr 0070                     _T0IF 005A  
                   i1l70 017A                     i1l67 017B                     i1l77 018A  
                   i1l78 01A3                     _TMR0 0001                     _main 0019  
                   btemp 007E                     start 000E          __end_of_Display 0245  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 00F8  
        __end_of___awmod 0153                    _ANSEL 0188          ___awdiv@divisor 0020  
        ___awdiv@counter 0025                    u41_20 0159                    u41_21 0158  
                  u42_20 017F                    u42_21 017E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISE 0089                    _setup 0245                    _muxeo 0075  
                  pclath 000A             _ADRESH_TEMP1 0079             _ADRESH_TEMP2 0031  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 008F       __size_of_Decimales 0055                   ??_main 002E  
      Decimales@Temporal 002C                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1242 015A  
                 i1l1250 016A                   i1l1260 018D                   i1l1244 0163  
                 i1l1262 01A0                   i1l1254 0180                   i1l1246 0167  
                 i1l1238 0153                   i1l1264 01A2                   i1l1256 0185  
                 i1l1784 0172                   i1l1786 0195                ??_Display 0022  
                 _Decena 0077                   _Unidad 0030                ??___awdiv 0024  
              ??___awmod 0024         ___awdiv@quotient 0027          ___awmod@divisor 0020  
        ___awmod@counter 0025                   saved_w 007E        __end_of_Decimales 0201  
__end_of__initialization 0015           __pcstackCOMMON 0070            __end_of_setup 0276  
         _OPTION_REGbits 0081                  ??_setup 0020               __pbssBANK0 0031  
             __pnvCOMMON 0075               __pmaintext 0019               __pintentry 0004  
                _Centena 0078                  _Display 0201                  ___awdiv 008F  
                ___awmod 00F8                  __ptext1 0245                  __ptext2 0201  
                __ptext3 01AC                  __ptext4 00F8                  __ptext5 008F  
                __ptext6 0153             __size_of_isr 0059         ___awmod@dividend 0022  
   end_of_initialization 0015                _Decimales 01AC      start_initialization 0011  
            __end_of_isr 01AC               ?_Decimales 0070              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020                 ?_Display 0020  
              __pnvBANK0 0030                 ?___awdiv 0020                 ?___awmod 0020  
         __size_of_setup 0031        interrupt_function 0004              ??_Decimales 0029  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _Banderas 0076         __size_of_Display 0044  
       __size_of___awdiv 0069         __size_of___awmod 005B            __size_of_main 0076  
          Display@Numero 0020               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
