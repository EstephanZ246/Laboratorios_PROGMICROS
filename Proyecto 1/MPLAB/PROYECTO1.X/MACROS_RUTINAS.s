
CAMBIO_DE_MODOS MACRO ///////// SEGUN EL VALOR DEL PORTE CAMBIAR¡ EL MODO EN LA VARIABLE "CAMBIOMODO"
    CAMBIO1:
    MOVLW 9
    SUBWF PORTE,W	    // EN ESTE MACRO VAMOS A TOMAR EL VALOR DE PORTE Y CAMBIAR BIT DE VARIABLE CAMBIO DE MODO 
    BTFSS STATUS,Z	    // PARA CAMBIAR EL MODO POSTERIORMENTE
    GOTO CAMBIO2	    // HACEMOS RESTAS PARA SABER EN QUE MODO ESTA
    MOVLW 00000001B
    MOVWF CAMBIOMODO
    CAMBIO2: 
    MOVLW 10
    SUBWF PORTE,W
    BTFSS STATUS,Z
    GOTO CAMBIO3
    MOVLW 00000010B
    MOVWF CAMBIOMODO
    CAMBIO3:
    MOVLW 11
    SUBWF PORTE,W
    BTFSS STATUS,Z
    GOTO CAMBIO4
    MOVLW 00000100B
    MOVWF CAMBIOMODO
    CAMBIO4:
    MOVLW 12
    SUBWF PORTE,W
    BTFSS STATUS,Z
    GOTO CAMBIO5
    MOVLW 00001000B
    MOVWF CAMBIOMODO
    CAMBIO5:
    MOVLW 13
    SUBWF PORTE,W
    BTFSS STATUS,Z
    GOTO VALOR_INICIAL
    MOVLW 00010000B
    MOVWF CAMBIOMODO
    VALOR_INICIAL:
    MOVLW 14
    SUBWF PORTE,W
    BTFSS STATUS,Z
    GOTO EJECUCION_DE_LOS_MODOS
    MOVLW 0X01
    MOVWF PORTE
 
 ENDM

MODO_NORMAL MACRO   // EL MACRO MODO_NORMAL SE ENCARGA DE DESPLEGAR EN LOS DISPLAYS EL VALOR CORRECTO CUANDO ESTEN ENCENDIDOS
D1V1:
    BTFSS PORTA,0
    GOTO D2V1
    MOVF DECENA_TEMP,W
    CALL TABLAS
    MOVWF PORTC 

D2V1:
    BTFSS PORTA,1
    GOTO D1V2
    MOVF UNIDAD_TEMP,W
    CALL TABLAS 
    MOVWF PORTC

D1V2:
    BTFSS PORTA,2
    GOTO D2V2
    MOVF DECENA_TEMP,W
    CALL TABLAS
    MOVWF PORTC 

D2V2:
    BTFSS PORTA,3
    GOTO D1V3
    MOVF UNIDAD_TEMP,W
    CALL TABLAS 
    MOVWF PORTC

D1V3:
    BTFSS PORTA,4
    GOTO D2V3
    MOVF DECENA_TEMP,W
    CALL TABLAS
    MOVWF PORTC 
    
D2V3:
    BTFSS PORTA,5
    GOTO D1C
    MOVF UNIDAD_TEMP,W
    CALL TABLAS 
    MOVWF PORTC

    
D1C:
    BTFSS PORTA,6
    GOTO D2C
    MOVF CONTADOR_CONFIG_DECENA,W
    CALL TABLAS
    MOVWF PORTC

D2C:
    BTFSS PORTA,7
    GOTO LOOP
    MOVF CONTADOR_CONFIG_UNIDAD,W
    CALL TABLAS
    MOVWF PORTC

ENDM 
    
SEMAFOROS MACRO // EL MACRO SEMAFOROS SE ENCARGA DE ENCENDER LOS LEDS QUE CORRESPONDEN 
 GOTO CONTADOR_PRINCIPAL_VIA1

VIA1:
    CONTADOR_PRINCIPAL_VIA1: // EN CADA VIA RECARGAMOS LOS VALORES AL CONTADOR PARA QUE EN EL TIMER 1 SE RESTEN
    MOVLW 0
    SUBWF TEMP_TIEMPOVIA1,W
    BTFSC STATUS,Z
    GOTO OPERACION1_VIA1
    
    MOVLW 0
    SUBWF CONTADOR_VIAS,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_TIEMPOVIA1,W
    MOVWF CONTADOR_VIAS
    // ACCION
    CLRF TEMP_TIEMPOVIA1

    OPERACION1_VIA1:  
    MOVLW 0
    SUBWF TEMP_VERDEVIA1,W
    BTFSC STATUS,Z
    GOTO OPERACION2_VIA1
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDEVIA1,W
    MOVWF CONTADOR
    CLRF TEMP_VERDEVIA1
    MOVLW 10001001B // AMARILLO DE LA VIA3
    MOVWF PORTD
    BCF PORTB,7
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION2_VIA1
    
    OPERACION2_VIA1: 
    MOVLW 0
    SUBWF TEMP_VERDETITILANTEVIA1,W
    BTFSC STATUS,Z
    GOTO OPERACION3_VIA1
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDETITILANTEVIA1,W
    MOVWF CONTADOR
    CLRF TEMP_VERDETITILANTEVIA1
    //
    MOVLW 01001100B // VERDE 1
    MOVWF PORTD
    BCF PORTB,7
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION3_VIA1

    OPERACION3_VIA1:
    MOVLW 0
    SUBWF TEMP_AMARILLOVIA1,W
    BTFSC STATUS,Z
    GOTO VIA2
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_AMARILLOVIA1,W
    MOVWF CONTADOR
    CLRF TEMP_AMARILLOVIA1
    //
    BTFSS TITILANTE,0
    GOTO $+3
    BCF PORTD,2
    GOTO $+2
    BSF PORTD,2
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO VIA2
    
VIA2: // CUANDO SE TERMINAN LOS VALORES DE VIA 1 SE EJECUTA VIA 2
    CONTADOR_PRINCIPAL_VIA2: 
    MOVLW 0
    SUBWF TEMP_TIEMPOVIA2,W
    BTFSC STATUS,Z
    GOTO OPERACION1_VIA2
    
    MOVLW 0
    SUBWF CONTADOR_VIAS,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_TIEMPOVIA2,W
    MOVWF CONTADOR_VIAS
    // ACCION
    CLRF TEMP_TIEMPOVIA2
    
    OPERACION1_VIA2: 
    MOVLW 0
    SUBWF TEMP_VERDEVIA2,W
    BTFSC STATUS,Z
    GOTO OPERACION2_VIA2
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDEVIA2,W
    MOVWF CONTADOR
    CLRF TEMP_VERDEVIA2 
    MOVLW 01001010B // AMARILLO DE LA VIA1
    MOVWF PORTD
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION2_VIA2
    
    OPERACION2_VIA2: 
   
    MOVLW 0
    SUBWF TEMP_VERDETITILANTEVIA2,W
    BTFSC STATUS,Z
    GOTO OPERACION3_VIA2
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDETITILANTEVIA2,W
    MOVWF CONTADOR
    CLRF TEMP_VERDETITILANTEVIA2
    //
    MOVLW 01100001B // VERDE 1 
    MOVWF PORTD
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION3_VIA2

    OPERACION3_VIA2:
    
    MOVLW 0
    SUBWF TEMP_AMARILLOVIA2,W
    BTFSC STATUS,Z
    GOTO VIA3
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_AMARILLOVIA2,W
    MOVWF CONTADOR
    CLRF TEMP_AMARILLOVIA2
    //
    BTFSS TITILANTE,0
    GOTO $+3
    BCF PORTD,5
    GOTO $+2
    BSF PORTD,5
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO VIA3
    
    
VIA3: // CUANDO SE TERMINA LA VIA 2 SE EFECTUA LA VIA 3
    CONTADOR_PRINCIPAL_VIA3: 
    MOVLW 0
    SUBWF TEMP_TIEMPOVIA3,W
    BTFSC STATUS,Z
    GOTO OPERACION1_VIA3
    
    MOVLW 0
    SUBWF CONTADOR_VIAS,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_TIEMPOVIA3,W
    MOVWF CONTADOR_VIAS
    // ACCION
    CLRF TEMP_TIEMPOVIA3
    
    OPERACION1_VIA3: 
    
    MOVLW 0
    SUBWF TEMP_VERDEVIA3,W
    BTFSC STATUS,Z
    GOTO OPERACION2_VIA3
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDEVIA3,W
    MOVWF CONTADOR
    CLRF TEMP_VERDEVIA3 
    MOVLW 01010001B // AMARILLO DE LA VIA 2
    BCF PORTB,7
    MOVWF PORTD
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION2_VIA3
    
    OPERACION2_VIA3: 
    
    MOVLW 0
    SUBWF TEMP_VERDETITILANTEVIA3,W
    BTFSC STATUS,Z
    GOTO OPERACION3_VIA3
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_VERDETITILANTEVIA3,W
    MOVWF CONTADOR
    CLRF TEMP_VERDETITILANTEVIA3
    //
    MOVLW 00001001B // VERDE 1 
    MOVWF PORTD
    BSF PORTB,7
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO OPERACION3_VIA3

    OPERACION3_VIA3:
    
    MOVLW 0
    SUBWF TEMP_AMARILLOVIA3,W
    BTFSC STATUS,Z
    GOTO FINALINAR_VIAS
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO $+4
    MOVF TEMP_AMARILLOVIA3,W
    MOVWF CONTADOR
    CLRF TEMP_AMARILLOVIA3
    //
    BTFSS TITILANTE,0
    GOTO $+3
    BCF PORTB,7
    GOTO $+2
    BSF PORTB,7
    //
    BTFSS PORTD,0
    GOTO $+3
    BCF PORTB,7
    GOTO $+2
    BSF PORTB,7
    //
    MOVLW 0
    SUBWF CONTADOR,W
    BTFSS STATUS,Z
    GOTO LOOP
    CLRF PORTD
    GOTO FINALINAR_VIAS
     
  FINALINAR_VIAS:  
    CALL REINICIO_DE_VALORES // RECARGAMOS LOS VALORES 
 
 ENDM
 
 REINICIAR_TMR0 MACRO
    MOVLW 250 //253.56 Colocamos valor obtenido con formula para tener 10ms=4*(1/125000)*(256-TMR0)*(128)
    MOVWF TMR0 // movemos el valor a timer0
    BCF T0IF; Limpiamos bandera de Timer0 
    ENDM
    
    REINICIAR_TMR1 MACRO
 // 61629.75 PARA 1000ms F0BD
    MOVLW 0XF0
    MOVWF TMR1H
    MOVLW 0XBD
    MOVWF TMR1L
    BCF PIR1,0; TMR1IF Limpiamos bandera de Timer1
    ENDM
    
    RUTINA_BCD MACRO // CONVERSOR DE BINARIO A DECIMAL
	CLRF	DECENA // LIMPIARMOS VARIABLE DECENA
	CLRF	CENTENA// LIMPIARMOS VARIABLE CENTENA (NO VA A SER NECESARIA DE IMPRIMIR)
	CLRF	UNIDAD
	MOVF	CONTADOR_VIAS,W // PASAMOS VALOR QUE QUEREMOS CONVERTIR A W
	MOVWF	UNIDAD // MOVEMOS VALOR A VARIABLE UNIDAD
 
BCD_0:
	MOVLW	0X0A // MOVEMOS VALOR DE 10 A W
	SUBWF	UNIDAD,W // RESTAMOS VALOR 10 A UNIDAD Y LO GUARDAMOS EN W
	BTFSS	STATUS,0//C // VERIFICAMOS CARRY DE STATUS
	GOTO	BCD_Fin // SI EL VALOR FUE 0 SALTA AL FINAL
BCD_1:
	MOVWF	UNIDAD // REGRESAMOS EL VALOR A UNIDAD
	INCF	DECENA,F // INCREMENTAMOS EN 1 EL VALOR DE DECENA
	MOVLW	0X0A //PONEMOS 10 DE NUEVO A W
	SUBWF	DECENA,W // RESTAMOS VALOR
	BTFSS	STATUS,0//C VERIFICAMOS CARRY DE ESTATUS 
	GOTO	BCD_0 // SI CARRY FUE 0, NEGATIVO 
BCD_2:
	CLRF	DECENA // LIMPIARMOS DECENA
	INCF	CENTENA,F // INCREMENTAMOS CENTENA
	GOTO	BCD_0 // VAMOS AL INICIO
BCD_Fin:  

    MOVF UNIDAD,W
    MOVWF UNIDAD_TEMP
    MOVF DECENA,W
    MOVWF DECENA_TEMP
    
    ENDM
    
    RUTINA_BCD_CONFIG MACRO // CONVERSOR DE BINARIO A DECIMAL
	CLRF	DECENA // LIMPIARMOS VARIABLE DECENA
	CLRF	CENTENA// LIMPIARMOS VARIABLE CENTENA (NO VA A SER NECESARIA DE IMPRIMIR)
	CLRF	UNIDAD
	MOVF	CONTADOR_CONFIG,W // PASAMOS VALOR QUE QUEREMOS CONVERTIR A W
	MOVWF	UNIDAD // MOVEMOS VALOR A VARIABLE UNIDAD
 
BCD1_0:
	MOVLW	0X0A // MOVEMOS VALOR DE 10 A W
	SUBWF	UNIDAD,W // RESTAMOS VALOR 10 A UNIDAD Y LO GUARDAMOS EN W
	BTFSS	STATUS,0//C // VERIFICAMOS CARRY DE STATUS
	GOTO	BCD1_Fin // SI EL VALOR FUE 0 SALTA AL FINAL
BCD1_1:
	MOVWF	UNIDAD // REGRESAMOS EL VALOR A UNIDAD
	INCF	DECENA,F // INCREMENTAMOS EN 1 EL VALOR DE DECENA
	MOVLW	0X0A //PONEMOS 10 DE NUEVO A W
	SUBWF	DECENA,W // RESTAMOS VALOR
	BTFSS	STATUS,0//C VERIFICAMOS CARRY DE ESTATUS 
	GOTO	BCD1_0 // SI CARRY FUE 0, NEGATIVO 
BCD1_2:
	CLRF	DECENA // LIMPIARMOS DECENA
	INCF	CENTENA,F // INCREMENTAMOS CENTENA
	GOTO	BCD1_0 // VAMOS AL INICIO
BCD1_Fin:  

    MOVF UNIDAD,W
    MOVWF CONTADOR_CONFIG_UNIDAD
    MOVF DECENA,W
    MOVWF CONTADOR_CONFIG_DECENA
    
    ENDM
    
    MODO_NORMAL_SEMAFOROS MACRO // MACRO PARA LOS SEMAFOROS, EJECUTARLOS
    SEMAFOROS 
    ENDM
